#!/bin/bash
# English language file for install.sh and smart-branch.sh

declare -A T_EN=(
    # ===== install.sh keys =====
    [checking_for]="Checking for"
    [not_found]="not found. Attempting to install..."
    [brew_not_found]="Error: Homebrew (brew) not found. Please install it to manage packages on macOS."
    [unsupported_pm]="Error: Could not detect a supported package manager (apt, pacman, dnf, yum). Please install manually."
    [unsupported_os]="Error: Unsupported OS. Please install manually."
    [install_failed]="Error: Failed to install. Please try installing it manually."
    [install_success]="Successfully installed."
    [already_installed]="is already installed."
    [start_setup]="üöÄ Starting Smart Branch Setup..."
    [step1]="--- Step 1: Installing Dependencies ---"
    [step2]="--- Step 2: Configuring AI (Google Gemini) ---"
    [config_not_found]="Config file not found at"
    [copying_template]="Copying from template..."
    [create_config_success]="Successfully created config file:"
    [template_not_found]="Error: Config template not found. Cannot create config file."
    [config_exists]="Config file already exists at"
    [api_key_prompt]="To use the AI features, you need a Google Gemini API key."
    [api_key_source]="You can get one from Google AI Studio."
    [enter_api_key]="Enter your Google Gemini API key (or press Enter to skip): "
    [update_api_key_success]="Successfully updated API key in"
    [jq_not_found_sed]="jq not found. Using sed to update API key (this is less reliable)."
    [skip_api_key]="Skipped API key setup. You can add it manually to the file"
    [setup_complete]="‚úÖ Setup complete! You can now use the 'sb' command."

    # ===== smart-branch.sh keys =====
    [select_lang]="Select language"
    [smart_branch_creator]="üöÄ === Smart Branch Creator ==="
    [usage]="Usage"
    [interactive_mode]="Interactive mode with selection menu"
    [cli_mode_ticket]="Command line mode with ticket"
    [cli_mode_no_ticket]="Command line mode without ticket"
    [examples]="Examples"
    [branch_format]="Branch format"
    [with_ticket]="With ticket"
    [no_ticket]="Without ticket"
    [suggested_prefixes]="Suggested prefixes (you can use any prefix)"
    [select_mode]="Select mode"
    [ai_mode]="ü§ñ AI Mode - Smart suggestions with Google Gemini"
    [traditional_mode]="‚ö° Traditional Mode - Classic naming"
    [exit]="‚ùå Exit"
    [choice]="Choice"
    [invalid_choice]="Invalid choice. Please select again"
    [git_user_error]="Error: Git username not found. Please configure git config user.name"
    [git_username]="üë§ Git username"
    [jq_not_installed]="jq is not installed (optional for AI features)"
    [missing_deps]="Missing dependencies"
    [run_install]="Run: ./install.sh to automatically install dependencies and configure AI."
    [manual_install]="Or install manually"
    [on_macos]="On macOS"
    [deps_missing_warning]="Some dependencies are missing, but the script can still run"
    [config_created]="Created config.json. Please update the API key in this file."
    [ai_disabled]="AI is not configured or is disabled. Using traditional branch name."
    [calling_ai]="ü§ñ Calling AI for branch name suggestions..."
    [ai_prompt_expert]="You are a Git branch naming expert. Based on the following information:"
    [ai_prompt_task_desc]="Task description"
    [ai_prompt_create_branches]="Create EXACTLY 3 branch names using the format"
    [ai_prompt_reqs]="Requirements"
    [ai_prompt_req1]="The description part should be concise, clear, and represent the purpose"
    [ai_prompt_req2]="Use kebab-case for the description"
    [ai_prompt_req3]="Maximum 50 characters for the entire branch name"
    [ai_prompt_req4]="Each option must be phrased differently"
    [ai_prompt_req5]="Return only 3 lines, one branch name per line, with no other text"
    [ai_prompt_format_example]="Format example"
    [curl_not_installed]="curl is not installed. Cannot call AI API."
    [ai_api_error]="Error calling AI API"
    [ai_suggestion_count_error]="AI returned an incorrect number of suggestions"
    [ai_fallback]="Falling back to traditional name."
    [ai_invalid_result]="AI did not return a valid result. Falling back to traditional name."
    [select_branch_name]="üéØ Select branch name"
    [traditional_option]="traditional"
    [other_branch_name]="Enter a different branch name"
    [enter_branch_name]="Enter branch name"
    [branch_name_empty]="Branch name cannot be empty"
    [enter_branch_info]="üìù Enter branch information"
    [prefix_prompt]="Enter Prefix"
    [prefix_suggestions]="Suggested prefixes"
    [ticket_prompt]="Ticket number (optional, press Enter to skip)"
    [desc_prompt]="Detailed task description (e.g., implement user authentication system)"
    [desc_empty]="Description cannot be empty"
    [ai_mode_selected]="ü§ñ AI Mode selected!"
    [using_traditional_branch_name]="üí° Using traditional branch name"
    [traditional_mode_selected]="‚ö° Traditional Mode selected!"
    [branch_name_selected]="üéØ Selected branch name"
    [confirm_creation]="‚úÖ Confirm branch creation? (y/N)"
    [creation_cancelled]="‚ùå Branch creation cancelled"
    [branch_exists_error]="Error: Branch"
    [branch_exists_error2]="already exists"
    [creating_branch]="üîÑ Creating branch..."
    [branch_created_success]="‚úÖ Successfully created and switched to branch"
    [branch_created_success2]=""
    [notes]="üìã Notes"
    [note1]="- A PR should do only one thing for a single ticket"
    [note2]="- Use git rebase when merging code from staging/master"
    [note3]="- Files should not exceed 400 lines of code"
    [note4]="- Folder names should be plural (except for app/pages)"
    [happy_coding]="üéâ Happy coding!"
    [creation_failed]="Error: Could not create branch"
    [goodbye]="üëã Goodbye!"
    [desc_missing_error]="Error: Description is missing when using format with a ticket number"
    [mode_for_info]="Select mode for the entered information"
)